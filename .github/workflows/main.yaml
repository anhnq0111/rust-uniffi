name: App Tracking SDK Workflow

on:
  pull_request:
    branches: [ develop, main ]

jobs:
  check_and_lint:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Cargo Check
        run: cargo check

      - name: Enforce formatting
        run: cargo fmt --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

  build_ios:
    name: Build iOS
    runs-on: macos-latest
    if: github.event.pull_request.draft == false
    needs: check_and_lint

    steps:
      - uses: actions/checkout@v4
      - name: Install cargo-swift
        run: cargo install cargo-swift --version 0.9.0 --locked

      - name: Build iOS SDK
        run: cargo swift package -p ios -r --lib-type static -y

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MathSdk
          path: MathSdk

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: check_and_lint

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install cargo-ndk
        run: cargo install cargo-ndk --locked

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android, armv7-linux-androideabi, x86_64-linux-android, i686-linux-android

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: false

      - name: Build Android SDK + bindings
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          cargo ndk -t armeabi-v7a -t arm64-v8a -o ./jniLibs build --release
          cargo run --features=uniffi/cli --bin uniffi_bindgen generate \
            --library ./jniLibs/armeabi-v7a/libsdk_rust_app_tracking.so \
            --language kotlin --out-dir ./bindings --no-format

      - name: Upload android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            jniLibs
            bindings
